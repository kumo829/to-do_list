# This file uses the version 2 docker-compose file format, described here:
# https://docs.docker.com/compose/compose-file/#version-2
#
# This runs the zipkin and zipkin-mysql containers, using docker-compose's
# default networking to wire the containers together.
#
# Note that this file is meant for learning Zipkin, not production deployments.

#https://github.com/openzipkin/zipkin/tree/master/docker/examples

version: '3.7'

networks:
  zipkin-network:
    driver: bridge

services:
  storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    networks:
      - zipkin-network
    # Uncomment to expose the storage port for testing
    # ports:
    #   - 3306:3306

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    depends_on:
      - storage
    networks:
      - zipkin-network

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
      - storage

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - storage
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - zipkin-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3001:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - zipkin-network


#  influx_db:
#    image: library/influxdb:1.7-alpine
#    container_name: influx_db
#    hostname: influx_db
#    ports:
#      - 8086:8086
#    environment:
#      - INFLUXDB_DB=monitoring_db
#      - INFLUXDB_HTTP_AUTH_ENABLED=false
#      - INFLUXDB_USER=${INFLUXDB_ADMIN_USER}
#      - INFLUXDB_USER_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
#      - INFLUXDB_USER=${INFLUXDB_USER}
#      - INFLUXDB_USER_PASSWORD=${INFLUXDB_PASSWORD}
#    volumes:
#      - ~/.docker/containers_volumes/todolist/influxdb:/var/lib/influxdb
#    networks:
#      - zipkin-network

#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.9.0
#    container_name: logstash
#    hostname: logstash
#    ports:
#      - 5044:5044
#    networks:
#      - zipkin-network
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
#    container_name: elasticsearch
#    hostname: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
##    volumes:
##      - data01:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#      - 9300:9300
#    networks:
#      - zipkin-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.9.0
#    environment:
#      - SERVER_NAME=kibana
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - 5601:5601
#    networks:
#      - zipkin-network



#  setup_grafana_datasource: #https://github.com/openzipkin/zipkin/blob/master/docker/examples/prometheus/create-datasource-and-dashboard.sh
#    image: appropriate/curl
#    container_name: setup_grafana_datasource
#    depends_on:
#      - grafana
#    volumes:
#      - ./prometheus/create-datasource-and-dashboard.sh:/create.sh
#    command: ./create.sh
#    networks:
#      - zipkin-network
